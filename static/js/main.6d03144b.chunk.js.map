{"version":3,"sources":["components/Hive.js","components/Buttons.js","components/WordList.js","components/InputField.js","App.js","index.js"],"names":["containerStyle","display","justifyContent","hexagonStyle","fill","strokeLinecap","strokeLinejoin","strokeWidth","stroke","cursor","textStyle","fontWeight","fontSize","dominantBaseline","textAnchor","userSelect","hiveStyle","width","maxWidth","margin","Hive","centerLetter","otherLetters","addLetter","toUpperCase","map","letter","style","xmlns","version","viewBox","id","points","href","x","y","onClick","height","buttonStyle","border","borderRadius","padding","color","background","refreshButtonStyle","Buttons","shuffleLetters","deleteLetter","submitWord","cx","cy","r","x1","y1","x2","y2","flexDirection","flex","wordListStyle","flexWrap","wordListItemStyle","borderBottom","WordList","foundWords","numOfAnswers","length","word","key","charAt","substring","toLowerCase","minHeight","InputField","playerInput","split","Math","random","includes","visibility","halfContainerStyle","minWidth","errorStyle","textAlign","borderTop","App","socket","useState","setFoundWords","letterList","setLetterList","setCenterLetter","setNumOfAnswers","error","setError","setPlayerInput","useEffect","on","data","console","log","setTimeout","filter","value","letters","i","j","floor","temp","emit","io","process","SERVER_URL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d03144b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst containerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n};\r\nconst hexagonStyle = {\r\n    fill: '#e6e6e6',\r\n    strokeLinecap: 'round',\r\n    strokeLinejoin: 'round',\r\n    strokeWidth: '6px',\r\n    stroke: 'white',\r\n    cursor: 'pointer'\r\n};\r\nconst textStyle = {\r\n    fontWeight: 'bold',\r\n    fontSize: '32px',\r\n    dominantBaseline: 'middle',\r\n    textAnchor: 'middle',\r\n    userSelect: 'none',\r\n    cursor: 'pointer'\r\n};\r\nconst hiveStyle = {\r\n    width: '75%',\r\n    maxWidth: '400px',\r\n    margin: '1em auto 2em'\r\n};\r\n\r\nconst Hive = ({ centerLetter = '', otherLetters = [], addLetter }) => {\r\n    centerLetter = centerLetter.toUpperCase();\r\n    otherLetters = otherLetters.map((letter) => letter.toUpperCase());\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 250 259.8\" style={hiveStyle}>\r\n                <defs>\r\n                    <symbol id=\"hexagon\">\r\n                        <polygon points={\"25 0, 75 0, 100 43.3, 75 86.6, 25 86.6, 0 43.3\"} />\r\n                    </symbol>\r\n                    <symbol id=\"top\">\r\n                        <use href=\"#hexagon\" style={hexagonStyle} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {otherLetters[0]}\r\n                        </text>\r\n                    </symbol>\r\n                    <symbol id=\"top-left\">\r\n                        <use href=\"#hexagon\" style={hexagonStyle} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {otherLetters[1]}\r\n                        </text>\r\n                    </symbol>\r\n                    <symbol id=\"top-right\">\r\n                        <use href=\"#hexagon\" style={hexagonStyle} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {otherLetters[2]}\r\n                        </text>\r\n                    </symbol>\r\n                    <symbol id=\"bottom-left\">\r\n                        <use href=\"#hexagon\" style={hexagonStyle} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {otherLetters[3]}\r\n                        </text>\r\n                    </symbol>\r\n                    <symbol id=\"bottom-right\">\r\n                        <use href=\"#hexagon\" style={hexagonStyle} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {otherLetters[4]}\r\n                        </text>\r\n                    </symbol>\r\n                    <symbol id=\"bottom\">\r\n                        <use href=\"#hexagon\" style={hexagonStyle} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {otherLetters[5]}\r\n                        </text>\r\n                    </symbol>\r\n                    <symbol id=\"center\">\r\n                        <use href=\"#hexagon\" style={{ ...hexagonStyle, fill: '#facd04' }} />\r\n                        <text x=\"50%\" y=\"55%\" style={textStyle}>\r\n                            {centerLetter}\r\n                        </text>\r\n                    </symbol>\r\n                </defs>\r\n\r\n                <use href=\"#top\" onClick={() => addLetter(otherLetters[0])} x=\"75\" y=\"0\" width=\"100\" height=\"86.6\" />\r\n                <use href=\"#top-left\" onClick={() => addLetter(otherLetters[1])} x=\"0\" y=\"43.3\" width=\"100\" height=\"86.6\" />\r\n                <use href=\"#top-right\" onClick={() => addLetter(otherLetters[2])} x=\"0\" y=\"129.9\" width=\"100\" height=\"86.6\" />\r\n                <use href=\"#bottom-left\" onClick={() => addLetter(otherLetters[3])} x=\"150\" y=\"43.3\" width=\"100\" height=\"86.6\" />\r\n                <use href=\"#bottom-right\" onClick={() => addLetter(otherLetters[4])} x=\"150\" y=\"129.9\" width=\"100\" height=\"86.6\" />\r\n                <use href=\"#bottom\" onClick={() => addLetter(otherLetters[5])} x=\"75\" y=\"173.2\" width=\"100\" height=\"86.6\" />\r\n                <use href=\"#center\" onClick={() => addLetter(centerLetter)} x=\"75\" y=\"86.6\" width=\"100\" height=\"86.6\" />\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hive;\r\n","import React from 'react';\r\n\r\nconst containerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n};\r\nconst buttonStyle = {\r\n    border: '1px solid #e6e6e6',\r\n    borderRadius: '2em',\r\n    padding: '.5em 1em',\r\n    color: 'black',\r\n    margin: '1em',\r\n    background: 'transparent',\r\n    fontSize: '1em',\r\n    cursor: 'pointer'\r\n};\r\nconst refreshButtonStyle = {\r\n    height: '1.5em',\r\n    padding: '.5em 0em .25em',\r\n}\r\n\r\nconst Buttons = ({ shuffleLetters, deleteLetter, submitWord }) => {\r\n    return (\r\n        <div style={containerStyle}>\r\n            <button style={buttonStyle} onClick={deleteLetter}>\r\n                Delete\r\n            </button>\r\n            <button style={buttonStyle} onClick={() => shuffleLetters()}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 100 100\" style={refreshButtonStyle}>\r\n                    <circle cx=\"50\" cy=\"50\" r=\"47\" stroke=\"black\" strokeWidth=\"6\" fill=\"white\" />\r\n                    <line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"100\" strokeWidth=\"20\" stroke=\"white\" />\r\n                    <polygon points=\"18,0 18,20 38,20\" fill=\"black\" />\r\n                    <polygon points=\"82,100 82,80 62,80\" fill=\"black\" />\r\n                </svg>\r\n            </button>\r\n            <button style={buttonStyle} onClick={submitWord}>\r\n                Enter\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nconst containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    border: '1px solid #e6e6e6',\r\n    borderRadius: '.5em',\r\n    padding: '1em 1.5em',\r\n    margin: '1em',\r\n    flex: '1'\r\n};\r\nconst wordListStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap'\r\n};\r\nconst wordListItemStyle = {\r\n    margin: '.25em 0',\r\n    borderBottom: '1px solid #e6e6e6',\r\n    maxWidth: '8em'\r\n};\r\n\r\nconst WordList = ({ foundWords = [], numOfAnswers = 0 }) => (\r\n    <div style={containerStyle} >\r\n        <div style={{ margin: '0 0 1em' }}>\r\n            You have found {foundWords.length} out of {numOfAnswers} words\r\n        </div>\r\n        <div style={wordListStyle}>\r\n            {foundWords.map((word) => (\r\n                <div style={wordListItemStyle} key={word}>\r\n                    {`${word.charAt(0).toUpperCase()}${word.substring(1, word.length).toLowerCase()}`}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default WordList;","import React from 'react';\r\n\r\nconst containerStyle = {\r\n    display: 'flex',\r\n    fontSize: '2.25em',\r\n    fontWeight: 'bold',\r\n    justifyContent: 'center',\r\n    margin: '.5em',\r\n    minHeight: '1em'\r\n};\r\n\r\nconst InputField = ({ centerLetter = '', otherLetters = '', playerInput = '' }) => {\r\n    return (\r\n        <div style={containerStyle}>\r\n            {playerInput.split('').map((letter) => (\r\n                <span key={Math.random()} style={\r\n                    letter === centerLetter ? { color: '#facd04' } : otherLetters.includes(letter) ? { color: 'black' } : { color: '#e6e6e6' }\r\n                }>\r\n                    {letter.toUpperCase()}\r\n                </span>\r\n            ))}\r\n            <span style={{ color: '#facd04', fontWeight: 'normal', visibility: 'hidden' }}>|</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;","import React, { useState, useEffect } from 'react';\r\nimport Hive from './components/Hive';\r\nimport Buttons from './components/Buttons';\r\nimport WordList from './components/WordList';\r\nimport InputField from './components/InputField';\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  minHeight: '100vh'\r\n};\r\n\r\nconst halfContainerStyle = {\r\n  flex: '1 1 0',\r\n  minWidth: '300px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n};\r\n\r\nconst errorStyle = {\r\n  color: 'salmon',\r\n  padding: '.25em',\r\n  textAlign: 'center',\r\n  margin: '.5em',\r\n  borderTop: '1px solid salmon',\r\n  fontWeight: 'bold'\r\n};\r\n\r\nconst App = ({ socket }) => {\r\n  const [foundWords, setFoundWords] = useState([]);\r\n  const [letterList, setLetterList] = useState([]);\r\n  const [centerLetter, setCenterLetter] = useState('');\r\n  const [numOfAnswers, setNumOfAnswers] = useState(0);\r\n  const [error, setError] = useState('.');\r\n  const [playerInput, setPlayerInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    socket.on('setup', (data) => {\r\n      setFoundWords(data.foundWords);\r\n      setLetterList(data.letterList);\r\n      setCenterLetter(data.centerLetter);\r\n      setNumOfAnswers(data.numOfAnswers);\r\n      console.log('setting up new connection');\r\n    });\r\n\r\n    socket.on('foundWords', (data) => {\r\n      console.log('someone found a word');\r\n      setFoundWords(data);\r\n    });\r\n\r\n    socket.on('wordAlreadyFound', (word) => {\r\n      console.log('already found ' + word);\r\n      setError('Already found');\r\n      setTimeout(() => setError('.'), 3000);\r\n    });\r\n\r\n    socket.on('incorrectLetters', (word) => {\r\n      console.log('incorrect letters: ' + word);\r\n      setError('Incorrect letters');\r\n      setTimeout(() => setError('.'), 3000);\r\n    });\r\n\r\n    socket.on('noCenterLetter', (word) => {\r\n      console.log('no center letter: ' + word);\r\n      setError('Missing middle letter');\r\n      setTimeout(() => setError('.'), 3000);\r\n    });\r\n\r\n    socket.on('notInWordList', (word) => {\r\n      console.log('not in word list: ' + word);\r\n      setError('Not in word list');\r\n      setTimeout(() => setError('.'), 3000);\r\n    });\r\n  }, []);\r\n\r\n  const addLetter = (letter) => {\r\n    setPlayerInput(playerInput + letter.toLowerCase());\r\n  };\r\n\r\n  const deleteLetter = () => {\r\n    setPlayerInput(playerInput.substring(0, playerInput.length - 1));\r\n  };\r\n\r\n  const shuffleLetters = () => {\r\n    let letters = letterList.filter((value) => value !== centerLetter);\r\n    for (let i in letters) {\r\n      const j = Math.floor(Math.random() * i)\r\n      const temp = letters[i];\r\n      letters[i] = letters[j];\r\n      letters[j] = temp;\r\n    }\r\n    setLetterList([centerLetter, ...letters]);\r\n  };\r\n\r\n  const submitWord = () => {\r\n    if (!playerInput) return;\r\n    socket.emit('submitWord', playerInput);\r\n    console.log('submitting word: ' + playerInput);\r\n    setPlayerInput('');\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={halfContainerStyle}>\r\n        <div style={{ ...errorStyle, visibility: error !== '.' ? 'visible' : 'hidden' }}>{error}</div>\r\n        <InputField\r\n          playerInput={playerInput}\r\n          centerLetter={centerLetter}\r\n          otherLetters={letterList.filter((value) => value !== centerLetter)}\r\n        />\r\n        <Hive\r\n          centerLetter={centerLetter}\r\n          otherLetters={letterList.filter((value) => value !== centerLetter)}\r\n          addLetter={addLetter}\r\n        />\r\n        <Buttons\r\n          shuffleLetters={shuffleLetters}\r\n          deleteLetter={deleteLetter}\r\n          submitWord={submitWord}\r\n        />\r\n      </div>\r\n      <div style={halfContainerStyle}>\r\n        <WordList\r\n          foundWords={foundWords}\r\n          numOfAnswers={numOfAnswers}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport io from 'socket.io-client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst socket = io(process.env.SERVER_URL || 'http://localhost:4000');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App\r\n      socket={socket}\r\n    />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}